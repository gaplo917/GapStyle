name: "GapStyle VS"
type: dark
semanticHighlighting: true
variables: 
  - &DEFAULT '#A9B7C6'
  - &STRING '#E6DB75'
  - &STRING_REGEX '#CC7832'
  - &STRING_INTERPOLATION '#CC7832'
  - &STRING_INVALID_ESCAPE '#6A8760'
  - &PREDEFINED '#4186F8'
  - &CONSTANT '#4186F8'
  - &KEYWORD '#F92672'
  - &FUNCTION '#A6E22E'
  - &FUNCTION_PARAM '#FD971F'
  - &ATTR_NAME '#89BB26'
  - &DOC_PARAM '#8A653B'
  - &DOC '#77B767'
  - &DOC_TAG '#526D4A'
  - &COMMENT '#808080'
  - &CLASS '#66D9EF'
  - &ABSTRACT_CLASS '#00CFD3'
  - &SPECIAL_BG '#2F4830'
  - &REGEX_BRACE '#E8BF6A'
  - &TYPE_PARAM '#20999D'
  - &NUMBER '#AE81FE'
  - &LOCAL_VAR '#CBAD96'
  - &MEMBER_VAR '#CF8823'
  - &INTERFACE '#0ED38B'
  - &DECORATOR '#BBB529'
  - &XML_TAG '#E8BF6A'
  - &XML_ATTR '#CECECE'
  - &XML_STRING '#6FD27C'
  - &JSON_PROPERTY '#CF8823'
  - &SASS_VAR '#6D9CBE'
  - &MACRO '#328F54'
  - &RELAX_MD_KEYWORD '#F96B9D'
  - &RELAX_MD_STRING '#E6DB85'
  - &HIGHLIGHT_BG '#383A3C'
colors:
    # From my faviourite One Dark Pro Theme
    activityBar.background: "#282c34"
    activityBar.foreground: "#d7dae0"
    activityBarBadge.background: "#4d78cc"
    activityBarBadge.foreground: "#f8fafd"
    badge.background: "#282c34"
    button.background: "#404754"
    debugToolBar.background: "#21252b"
    diffEditor.insertedTextBackground: "#00809b33"
    dropdown.background: "#21252b"
    dropdown.border: "#21252b"
    editor.background: "#282c34"
    editor.findMatchBackground: "#42557b"
    editor.findMatchBorder: "#457dff"
    editor.findMatchHighlightBackground: "#6199ff2f"
    editor.foreground: "#abb2bf"
    editor.lineHighlightBackground: "#2c313c"
    editor.selectionBackground: "#67769660"
    editor.selectionHighlightBackground: "#ffffff10"
    editor.selectionHighlightBorder: "#dddddd"
    editor.wordHighlightBackground: "#d2e0ff2f"
    editor.wordHighlightBorder: "#7f848e"
    editor.wordHighlightStrongBackground: "#abb2bf26"
    editor.wordHighlightStrongBorder: "#7f848e"
    editorActiveLineNumber.foreground: "#737984"
    editorBracketMatch.background: "#515a6b"
    editorBracketMatch.border: "#515a6b"
    editorCursor.background: "#ffffffc9"
    editorCursor.foreground: "#528bff"
    editorError.foreground: "#c24038"
    editorGroup.background: "#181a1f"
    editorGroup.border: "#181a1f"
    editorGroupHeader.tabsBackground: "#21252b"
    editorHoverWidget.background: "#21252b"
    editorHoverWidget.border: "#181a1f"
    editorIndentGuide.activeBackground: "#c8c8c859"
    editorIndentGuide.background: "#3b4048"
    editorLineNumber.foreground: "#495162"
    editorMarkerNavigation.background: "#21252b"
    editorRuler.foreground: "#abb2bf26"
    editorSuggestWidget.background: "#21252b"
    editorSuggestWidget.border: "#181a1f"
    editorSuggestWidget.selectedBackground: "#2c313a"
    editorUnnecessaryCode.opacity: "#00000088"
    editorUnnecessaryCode.border: "#ffffff00"
    editorWarning.foreground: "#d19a66"
    editorWhitespace.foreground: "#3b4048"
    editorWidget.background: "#21252b"
    focusBorder: "#464646"
    input.background: "#1d1f23"
    list.activeSelectionBackground: "#2c313a"
    list.activeSelectionForeground: "#d7dae0"
    list.focusBackground: "#383e4a"
    list.highlightForeground: "#c5c5c5"
    list.hoverBackground: "#292d35"
    list.inactiveSelectionBackground: "#2c313a"
    list.inactiveSelectionForeground: "#d7dae0"
    list.warningForeground: "#d19a66"
    menu.foreground: "#c8c8c8"
    peekViewEditor.background: "#1b1d23"
    peekViewEditor.matchHighlightBackground: "#29244b"
    peekViewResult.background: "#22262b"
    scrollbarSlider.activeBackground: "#747d9180"
    scrollbarSlider.background: "#4e566660"
    scrollbarSlider.hoverBackground: "#5a637580"
    sideBar.background: "#21252b"
    sideBarSectionHeader.background: "#282c34"
    statusBar.background: "#21252b"
    statusBar.debuggingBackground: "#cc6633"
    statusBar.debuggingBorder: "#66017a"
    statusBar.debuggingForeground: "#ffffff"
    statusBar.foreground: "#9da5b4"
    statusBar.noFolderBackground: "#21252b"
    statusBarItem.hoverBackground: "#2c313a"
    statusBarItem.remoteBackground: "#4d78cc"
    statusBarItem.remoteForeground: "#f8fafd"
    tab.activeBackground: "#282c34"
    tab.activeForeground: "#dcdcdc"
    tab.border: "#181a1f"
    tab.hoverBackground: "#323842"
    tab.inactiveBackground: "#21252b"
    tab.unfocusedHoverBackground: "#323842"
    terminal.ansiBlack: "#2d3139"
    terminal.ansiBlue: "#61afef"
    terminal.ansiBrightBlack: "#7f848e"
    terminal.ansiBrightBlue: "#528bff"
    terminal.ansiBrightCyan: "#56b6c2"
    terminal.ansiBrightGreen: "#98c379"
    terminal.ansiBrightMagenta: "#7e0097"
    terminal.ansiBrightRed: "#f44747"
    terminal.ansiBrightWhite: "#d7dae0"
    terminal.ansiBrightYellow: "#e5c07b"
    terminal.ansiCyan: "#56b6c2"
    terminal.ansiGreen: "#98c379"
    terminal.ansiMagenta: "#c678dd"
    terminal.ansiRed: "#e06c75"
    terminal.ansiWhite: "#d7dae0"
    terminal.ansiYellow: "#e5c07b"
    terminal.foreground: "#c8c8c8"
    textLink.foreground: "#61afef"
    titleBar.activeBackground: "#282c34"
    titleBar.activeForeground: "#9da5b4"
    titleBar.inactiveBackground: "#21252b"
    titleBar.inactiveForeground: "#6b717d"
semanticTokenColors:
    namespace:
      fontStyle: ''
      foreground: *DEFAULT

    struct:
      foreground: *CLASS

    type:
      foreground: *TYPE_PARAM

    type.defaultLibrary:
      foreground: *TYPE_PARAM

    typeParameter:
      foreground: *TYPE_PARAM

    class:
      foreground: *CLASS

    class.typeArgument:
      foreground: *TYPE_PARAM

    class.typeHint:
      foreground: *TYPE_PARAM
      fontStyle: ''

    class.builtin:
      foreground: *KEYWORD
      fontStyle: bold

    class.defaultLibrary:
      fontStyle: italic
      foreground: *PREDEFINED

    interface:
      foreground: *INTERFACE

    enum:
      foreground: *CLASS

    function:
      foreground: *FUNCTION

    function.builtin:
      fontStyle: italic

    function.defaultLibrary:
      fontStyle: italic
      foreground: *FUNCTION

    function.readonly:
      fontStyle: ''
      foreground: *FUNCTION

    method:
      foreground: *FUNCTION

    method.static:
      foreground: *FUNCTION
      fontStyle: italic

    member:
      fontStyle: ''
      foreground: *FUNCTION

    member.static:
      fontStyle: italic

    macro:
      foreground: *DECORATOR

    variable:
      fontStyle: 'italic'
      foreground: *LOCAL_VAR

    variable.global:
      fontStyle: 'italic'
      foreground: *PREDEFINED

    variable.local:
      fontStyle: ''
      foreground: *LOCAL_VAR

    variable.readonly:
      foreground: *LOCAL_VAR

    variable.defaultLibrary:
      fontStyle: italic
      foreground: *PREDEFINED

    parameter:
      fontStyle: ''
      foreground: *FUNCTION_PARAM

    property:
      fontStyle: ''
      foreground: *MEMBER_VAR

    property.static:
      fontStyle: italic

    property.readonly:
      foreground: *MEMBER_VAR

    enumMember:
      foreground: *PREDEFINED

    event:
      foreground: *DEFAULT

    templateType:
      foreground: *CLASS

    templateFunction:
      foreground: *FUNCTION
    
    genericType:
      foreground: *TYPE_PARAM

    label:
      foreground: *DECORATOR

    newOperator:
      foreground: *KEYWORD
    
    operatorOverload:
      foreground: *FUNCTION

    memberOperatorOverload:
      foreground: *FUNCTION

    referenceType:
      fontStyle: italic

    selfParameter:
      foreground: *KEYWORD
      fontStyle: bold

tokenColors: 
# =============================================================================
# General
# =============================================================================
  - scope:
    - source
    settings:
      foreground: *DEFAULT

  - scope:
    - emphasis
    settings:
      fontStyle: italic

  - scope:
    - strong
    settings:
      fontStyle: bold

  - scope:
    - header
    settings:
      foreground: *DEFAULT

  - scope:
    - source
    settings:
      foreground: *DEFAULT

# =============================================================================
# Strings
# =============================================================================

  - name: Strings
    scope:
    - string
    - constant.other.symbol.double-quoted
    - constant.other.symbol.double-quoted punctuation.definition.constant
    - constant.other.symbol.single-quoted
    - constant.other.symbol.single-quoted punctuation.definition.constant
    settings:
      foreground: *STRING

  - name: String quotes (temporary vscode fix)
    scope:
    # NOTE: This is a temporary fix for VSCode expand selection.
    # See (https://github.com/Microsoft/vscode/issues/4795)
    - punctuation.definition.string.begin
    - punctuation.definition.string.end
    settings:
      foreground: *STRING

  - name: Property quotes (temporary vscode fix)
    scope:
    # NOTE: Same as above
    - punctuation.support.type.property-name.begin
    - punctuation.support.type.property-name.end
    settings:
      foreground: *STRING

  - name: Invalid Escape
    scope:
    - invalid.illegal.unrecognized-string-escape
    settings:
      foreground: *STRING_INVALID_ESCAPE

# =============================================================================
# Classes
# =============================================================================

  - name: User-defined class names
    scope:
    - entity.name.type.class
    - entity.name.class
    - meta.class entity.name.type
    settings:
      foreground: *CLASS
      fontStyle: ''

  - name: this, super, self, etc.
    scope:
    - keyword.expressions-and-types.swift
    - keyword.other.this
    - variable.language
    - variable.language punctuation.definition.variable.php # the "$" symbol in $this
    - variable.other.readwrite.instance.ruby                # ruby's "@" instance symbol
    - variable.parameter.function.language.special          # Special words as parameters
    settings:
      foreground: *KEYWORD

  - name: Inherited classes
    scope:
    - entity.other.inherited-class
    settings:
      foreground: *ABSTRACT_CLASS

# =============================================================================
# Enum
# =============================================================================
  - name: General Enum
    scope:
    - entity.name.type.enum
    settings:
      foreground: *CLASS

  - name: General Enum Member
    scope:
    - variable.other.enummember
    settings:
      foreground: *PREDEFINED

# =============================================================================
# Comments
# =============================================================================

  - name: Comments
    scope:
    - comment
    - comment.block.documentation punctuation.definition.comment
    - unused.comment
    - wildcard.comment
    settings:
      foreground: *DOC

  - name: Slash Comment
    scope:
    - comment.line
    - comment.line.double-slash punctuation.definition.comment
    - comment.block
    - comment.block punctuation.definition.comment
    - comment.line.number-sign punctuation.definition.comment
    settings:
      foreground: *COMMENT

  - name: JSDoc-style keywords
    scope:
    - comment keyword.codetag.notation
    - comment.block.documentation keyword
    - comment.block.documentation storage.type.class
    - comment.block.documentation storage.type.class punctuation.definition.block.tag
    settings:
      foreground: *DOC_TAG
      fontStyle: underline

  - name: JSDoc-style types
    scope:
    - meta.class comment.block.documentation
    - meta.class comment.block.documentation punctuation.definition.comment
    - comment.block.documentation entity.name.type
    - comment.block.documentation
    settings:
      foreground: *DOC
      fontStyle: italic

  - name: JSDoc-style type brackets
    scope:
    - comment.block.documentation entity.name.type punctuation.definition.bracket
    settings:
      foreground: *DOC

  - name: JSDoc-style comment parameters
    scope:
    - comment.block.documentation variable
    settings:
      foreground: *DOC_PARAM
      fontStyle: italic

  - name: Docstrings
    scope:
    - string.quoted.docstring.multi
    settings:
      foreground: *DOC

# =============================================================================
# Constants
# =============================================================================

  - name: Constants
    scope:
    - constant
    settings:
      foreground: *CONSTANT

  - name: Constant escape sequences
    scope:
    - constant.character.escape
    - constant.character.string.escape
    - constant.regexp
    settings:
      foreground: *STRING_REGEX

# =============================================================================
# Entities
# =============================================================================

  - name: Default tags
    scope:
    - entity.name.tag
    settings:
      foreground: *XML_TAG
      fontStyle: bold

  - name: Default attribute parent selectors ('&')
    scope:
    - entity.other.attribute-name.parent-selector
    settings:
      foreground: *KEYWORD

  - name: Default attribute names
    scope:
    - entity.other.attribute-name
    settings:
      foreground: *ATTR_NAME
      fontStyle: italic

# =============================================================================
# Functions/Methods
# =============================================================================

  - name: Function names
    scope:
    - entity.name.function
    - meta.method.declaration
    - meta.function-call
    - meta.function-call.generic
    - meta.function-call.object
    - meta.function-call.static
    - meta.method.groovy
    - support.function.any-method.lua
    - keyword.operator.function.infix
    - support.function
    settings:
      foreground: *FUNCTION

  - name: Function parameters
    scope:
    - entity.name.variable.parameter
    - meta.at-rule.function variable # Sass function params
    - meta.at-rule.mixin variable    # Sass mixin params
    - meta.function.arguments variable.other.php
    - meta.selectionset.graphql meta.arguments.graphql variable.arguments.graphql
    - variable.parameter
    - meta.parameters entity.name.function
    settings:
      foreground: *FUNCTION_PARAM

# =============================================================================
# Decorator / Annotation
# =============================================================================
  - name: Decorator / Annotation
    scope:
    - meta.decorator
    - storage.type.annotation
    - punctuation.definition.annotation
    - meta.decorator punctuation.decorator
    settings:
      foreground: *DECORATOR
      fontStyle: ''

  - name: Decorators
    scope:
    - meta.decorator variable.other.readwrite
    - meta.decorator variable.other.property
    settings:
      foreground: *DECORATOR


# =============================================================================
# Keywords
# =============================================================================

  - name: Keywords
    scope:
    - keyword
    - punctuation.definition.keyword
    - keyword.control.new
    - keyword.operator.new
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Generic selectors
    scope:
    - meta.selector
    settings:
      foreground: *KEYWORD


# =============================================================================
# Language Built-ins
# =============================================================================

  - name: Language Built-ins
    scope:
    - support
    - source
    settings:
      foreground: *DEFAULT

  - name: Built-in magic functions and constants
    scope:
    - support.function.magic
    - support.variable
    - variable.other.predefined
    - meta.function-call support.class.builtin
    - meta.function-call support.class
    settings:
      fontStyle: italic
      foreground: *PREDEFINED

  - name: Built-in properties
    scope:
    - support.type.property-name
    settings:
      fontStyle: ''

# =============================================================================
# Punctuation / Operators
# =============================================================================

  - name: Separators (key/value, namespace, inheritance, pointer, hash, slice, etc)
    scope:
    - constant.other.symbol.hashkey punctuation.definition.constant.ruby
    - entity.other.attribute-name.placeholder punctuation # Sass placeholder `%` symbols
    - entity.other.attribute-name.pseudo-class punctuation
    - entity.other.attribute-name.pseudo-element punctuation
    - meta.object-binding-pattern-variable punctuation.destructuring
    - punctuation.definition.parameters
    - meta.block punctuation.definition.block
    - punctuation.colon.graphql
    - punctuation.definition.entity.other.inherited-class
    - punctuation.function.swift
    - punctuation.separator.dictionary.key-value
    - punctuation.separator.hash
    - punctuation.separator.inheritance
    - punctuation.separator.key-value
    - punctuation.separator.namespace
    - punctuation.separator.pointer-access
    - punctuation.separator.slice
    - punctuation.terminator.statement
    - string.unquoted.heredoc punctuation.definition.string
    - punctuation.separator.annotation
    - meta.object-binding-pattern-variable
    - punctuation.separator.comma
    - meta.array.literal meta.brace.square
    - meta.type.parameters punctuation.definition.typeparameters.begin
    - meta.type.parameters punctuation.definition.typeparameters.end
    - meta.class punctuation.definition.block
    - punctuation
    - storage.type.function.arrow
    - keyword.operator.spread
    - keyword.operator.comparison
    - keyword.operator.pattern
    - keyword.operator.arithmetic
    - keyword.operator.string
    - keyword.operator.class
    - keyword.operator.key
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: Brackets, braces, parens, etc.
    scope:
    - keyword.operator.assignment
    - keyword.operator.other.powershell # Commas
    - keyword.other.statement-separator.powershell
    - meta.brace.round
    - meta.function-call punctuation
    - punctuation.definition.arguments.begin
    - punctuation.definition.arguments.end
    - punctuation.definition.entity.begin
    - punctuation.definition.entity.end
    - punctuation.definition.tag.cs # HTML tags in comments
    - punctuation.definition.type.begin
    - punctuation.definition.type.end
    - punctuation.section.scope.begin
    - punctuation.section.scope.end
    - string.template meta.brace
    - string.template punctuation.accessor
    settings:
      foreground: *DEFAULT

  - name: Variable interpolation operators
    scope:
    - meta.string-contents.quoted.double punctuation.definition.variable
    - punctuation.definition.interpolation.begin
    - punctuation.definition.interpolation.end
    - punctuation.definition.template-expression.begin
    - punctuation.definition.template-expression.end
    - punctuation.section.embedded.begin
    - punctuation.section.embedded.coffee
    - punctuation.section.embedded.end
    - punctuation.section.embedded.end source.php  # PHP edge case
    - punctuation.section.embedded.end source.ruby # Issue with ruby's tmLanguage
    - punctuation.definition.variable.makefile
    settings:
      foreground: *STRING_INTERPOLATION
# =============================================================================
# Serializable / Config Langages
# =============================================================================

  - name: Keys (serializable languages)
    scope:
    - entity.name.function.target.makefile
    settings:
      foreground: *MEMBER_VAR

  - name: Dates / timestamps (serializable languages)
    scope:
    - constant.other.date
    - constant.other.timestamp
    settings:
      foreground: *PREDEFINED


# =============================================================================
# Storage
# =============================================================================

  - name: Storage
    scope:
    - storage
    - meta.implementation storage.type.objc
    - meta.interface-or-protocol storage.type.objc
    - source.groovy storage.type.def
    settings:
      fontStyle: bold
      foreground: *KEYWORD

  - name: Types
    scope:
    - keyword.primitive-datatypes.swift
    - keyword.type.cs
    - meta.protocol-list.objc
    - meta.return-type.objc
    - source.go storage.type
    - source.groovy storage.type
    - source.powershell entity.other.attribute-name
    - storage.class.std.rust
    - storage.type.attribute.swift
    - storage.type.c
    - storage.type.core.rust
    - storage.type.cs
    - storage.type.groovy
    - storage.type.objc
    - storage.type.haskell
    - storage.type.ocaml
    settings:
      fontStyle: italic
      foreground: *PREDEFINED

  - name: Generics, templates, and mapped type declarations
    scope:
    - support.type
    - entity.name.type.type-parameter
    - entity.name.type.parameter
    - entity.name.type.alias
    - meta.indexer.mappedtype.declaration entity.name.type # Mapped type declarations
    - meta.type.parameters entity.name.type                # Generic type declarations
    settings:
      foreground: *TYPE_PARAM

  - name: Modifiers
    scope:
    - storage.modifier
    settings:
      foreground: *KEYWORD

  - name: Storage import
    scope:
    - storage.modifier.import
    settings:
      foreground: *DEFAULT
      fontStyle: ''

# =============================================================================
# RegExp
# =============================================================================

  - name: RegExp string
    scope:
    - string.regexp
    - constant.other.character-class.set.regexp
    - constant.character.escape.backslash.regexp
    - string.regexp punctuation.definition.string.begin
    - string.regexp punctuation.definition.string.end
    settings:
      foreground: *STRING
      background: *SPECIAL_BG

  - name: Non-capture operators
    scope:
    # NOTE: The scope name is a misnomer. It is actually non-capture operators
    - punctuation.definition.group.capture.regexp
    settings:
      background: *SPECIAL_BG

  - name: Character group
    scope:
    - punctuation.definition.character-class.regexp
    settings:
      foreground: *PREDEFINED

  - name: Capture groups
    scope:
    - punctuation.definition.group.regexp
    - punctuation.definition.character-class.regexp
    settings:
      foreground: *REGEX_BRACE

  - name: Assertion operators
    scope:
    - punctuation.definition.group.assertion.regexp
    - keyword.operator.negation.regexp
    settings:
      foreground: *DEFAULT

  - name: Positive lookaheads
    scope:
    - meta.assertion.look-ahead.regexp
    settings:
      foreground: *FUNCTION

  - name: Character Class
    scope:
    - constant.other.character-class.regexp
    settings:
      foreground: *DEFAULT
      
  - name: Keyword Quantifier
    scope:
    - keyword.operator.quantifier.regexp
    settings:
      foreground: *NUMBER

  - name: Escape
    scope:
    - constant.character.escape.backslash.regexp
    - constant.other.placeholder
    settings:
      foreground: *STRING_REGEX

  - name: Class Range
    scope:
    - constant.other.character-class.range.regexp
    settings:
      foreground: *DEFAULT

# =============================================================================
# Variables
# =============================================================================

  - name: Variables and object properties
    scope:
      - variable.other.object
    settings:
      foreground: *DEFAULT # Using default color is good for language that not support semantic highlighting

  - name: Destructuring / aliasing reference name (LHS)
    scope:
    - meta.import variable.other.readwrite                          # Module import aliasing (real name)
    - meta.object-binding-pattern-variable variable.object.property # Object destructuring property
    - meta.variable.assignment.destructured.object.coffee variable  # Object destructuring property (coffeescript)
    settings:
      foreground: *DEFAULT

  - name: Destructuring / aliasing variable name (RHS)
    scope:
    - constant.language.import-export-all
    - meta.import variable.other.readwrite.alias                             # Module import aliasing (alias name)
    - meta.export variable.other.readwrite.alias                             # Module import aliasing (alias name)
    - meta.variable.assignment.destructured.object.coffee variable variable  # Object destructuring variable (coffeescript)
    settings:
      fontStyle: ''
      foreground: *DEFAULT

  - name: Object Properties
    scope:
    - variable.object.property
    - variable.other.property
    - support.variable.property
    - variable.other.object.property
    - meta.definition.property
    - meta.field.declaration
    - meta.object.member
    settings:
      foreground: *MEMBER_VAR

# =============================================================================
# Modules or namespace
# =============================================================================
  - name: Modules or namespace
    scope:
    - entity.name.type.module
    - meta.namespace.declaration meta.import
    settings:
      foreground: *DEFAULT

# =============================================================================
# Interface
# =============================================================================
  - name: Interface
    scope:
    - entity.name.type.interface
    settings:
      foreground: *INTERFACE
# =============================================================================
# Number
# =============================================================================
  - name: Numeric
    scope:
    - constant.numeric
    settings:
      foreground: *NUMBER
# =============================================================================
# Primitive
# =============================================================================
  - name: Primitive
    scope:
    - support.type.primitive
    - storage.type.primitive
    - constant.language.boolean
    settings:
      foreground: *KEYWORD
      fontStyle: bold


# Language Specific Extension
# =============================================================================
# Markdown
# =============================================================================
  - name: Markdown Default
    scope:
    - text.html.markdown string.unquoted
    settings:
      foreground: *DEFAULT

  - name: Puncuation
    scope:
    - punctuation.definition.bold.markdown
    - punctuation.definition.italic.markdown
    - punctuation.definition.italic.markdown
    - punctuation.definition.list.begin.markdown
    - punctuation.definition.list.end.markdown
    - punctuation.definition.heading.markdown
    - punctuation.definition.markdown
    - punctuation.definition.quote.begin.markdown
    - punctuation.definition.quote.end.markdown
    - punctuation.definition.string.begin.markdown
    - punctuation.definition.string.end.markdown
    - constant.other.reference.link.markdown
    - punctuation.definition.string.markdown
    - entity.name.section.markdown
    settings:
      foreground: *RELAX_MD_KEYWORD
      fontStyle: ''

  - name: Inline code (prose)
    scope:
    - markup.inline.raw
    - markup.raw.restructuredtext
    - punctuation.definition.raw.markdown
    - markup.fenced_code.block.markdown punctuation.definition.markdown
    - fenced_code.block.language.markdown
    - markup.fenced_code.block.markdown
    settings:
      foreground: *COMMENT

  - name: Links (prose)
    scope:
    - markup.underline.link
    - markup.underline.link.image
    settings:
      foreground: *PREDEFINED

  - name: Link text, image alt text (prose)
    scope:
    - meta.link.reference.def.restructuredtext
    - punctuation.definition.directive.restructuredtext
    - string.other.link.description
    - string.other.link.title
    settings:
      foreground: *RELAX_MD_STRING

  - name: Blockquotes (prose)
    scope:
    - entity.name.directive.restructuredtext
    - markup.quote
    settings:
      foreground: *RELAX_MD_STRING
      fontStyle: italic

  - name: Horizontal rule (prose)
    scope:
    - meta.separator.markdown
    settings:
      foreground: *COMMENT

  - name: Code blocks
    scope:
    - fenced_code.block.language
    - markup.raw.inner.restructuredtext
    settings:
      foreground: *DEFAULT

  - name: Prose constants
    scope:
    - punctuation.definition.constant.restructuredtext
    settings:
      foreground: *DEFAULT

  - name: Braces in markdown headings
    scope:
    - markup.heading.markdown punctuation.definition.string.begin
    - markup.heading.markdown punctuation.definition.string.end
    settings:
      foreground: *DEFAULT

  - name: Braces in markdown paragraphs
    scope:
    - meta.paragraph.markdown punctuation.definition.string.begin
    - meta.paragraph.markdown punctuation.definition.string.end
    settings:
      foreground: *DEFAULT

  - name: Braces in markdown blockquotes
    scope:
    - markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.begin
    - markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.end
    settings:
      foreground: *STRING

# =============================================================================
# HTML
# =============================================================================
  - name: HTML CDATA
    scope:
    - string.unquoted.cdata
    - string.unquoted.cdata punctuation.definition.string.begin
    - string.unquoted.cdata punctuation.definition.string.end
    settings:
      foreground: *DEFAULT

  - name: HTML Tag
    scope:
    - meta.tag entity.name.tag.html
    - meta.tag entity.name.tag.html
    - entity.name.tag.block.any.html
    - entity.name.tag.script.html
    - entity.name.tag.style.html
    settings:
      foreground: *XML_TAG
      fontStyle: bold

  - name: HTML Tag Punctuation
    scope:
    - punctuation.definition.tag.begin.html
    - punctuation.definition.tag.end.html
    settings:
      foreground: *DEFAULT

  - name: HTML Attribute
    scope:
    - entity.other.attribute-name.html
    - entity.other.attribute-name.id.html
    settings:
      foreground: *XML_ATTR

  - name: HTML Arrtibute Value
    scope:
    - punctuation.definition.string.begin.html
    - punctuation.definition.string.end.html
    - string.quoted.double.html
    settings:
      foreground: *XML_STRING

  - name: HTML Speical character
    scope:
    - constant.character.entity.numeric.hexadecimal.html
    - punctuation.definition.entity.html
    - constant.character.entity.named.html
    settings:
      foreground: *SASS_VAR

# =============================================================================
# XML
# =============================================================================
  - name: XML TAG
    scope:
    - meta.tag.xml entity.name.tag.localname.xml
    - meta.tag.xml entity.name.tag.namespace.xml
    - meta.tag.xml entity.other.attribute-name.namespace.xml
    - meta.tag.preprocessor.xml
    - meta.tag.preprocessor.xml entity.name.tag.xml
    - meta.tag.sgml.doctype.xml keyword.other.doctype.xml
    - meta.tag.sgml.doctype.xml variable.language.documentroot.xml
    settings:
      foreground: *XML_TAG
  - name: XML TAG Punctuation
    scope:
    - punctuation.definition.tag.xml
    settings:
      foreground: *DEFAULT
  - name: XML Attribute
    scope:
    - meta.tag.xml entity.other.attribute-name.localname.xml
    - meta.tag.preprocessor.xml entity.other.attribute-name.localname.xml
    - meta.tag.preprocessor.xml entity.other.attribute-name.xml
    settings:
      foreground: *XML_ATTR

  - name: XML String
    scope:
    - meta.tag.xml string.quoted.double.xml
    - meta.tag.preprocessor.xml string.quoted.double.xml
    - meta.tag.xml string.quoted.single.xml
    - meta.tag.preprocessor.xml string.quoted.single.xml
    - punctuation.definition.string.begin.xml
    - punctuation.definition.string.end.xml
    settings:
      foreground: *XML_STRING

  - name: XML Default
    scope:
    - string.unquoted.cdata.xml
    - string.unquoted.cdata.xml punctuation.definition.string.begin.xml
    - string.unquoted.cdata.xml punctuation.definition.string.end.xml
    settings:
      foreground: *DEFAULT

  - name: XML Entity
    scope:
    - constant.character.entity.xml
    - punctuation.definition.constant.xml
    settings:
      foreground: *PREDEFINED

# =============================================================================
# JSON
# =============================================================================
  - name: JSON Property
    scope:
    - support.type.property-name.json
    - support.type.property-name.json punctuation.support.type.property-name.begin.json
    - support.type.property-name.json punctuation.support.type.property-name.end.json
    settings:
      foreground: *JSON_PROPERTY

  - name: JSON Boolean
    scope:
    - constant.language.json
    settings:
      foreground: *KEYWORD
      fontStyle: bold
# =============================================================================
# CSS
# =============================================================================
  - name: Css Property
    scope:
    - meta.property-name support.type.property-name.css
    - support.type.vendored.property-name.css
    - entity.other.attribute-name.css
    settings:
      foreground: *XML_ATTR
      fontStyle: italic

  - name: Css HEX Color
    scope:
    - constant.other.color.rgb-value.hex.css
    - constant.other.color.rgb-value.hex.css punctuation.definition.constant.css
    settings:
      foreground: *FUNCTION_PARAM
      fontStyle: ''

  - name: Css URL / Color / Unit
    scope:
    - support.constant.color.w3c-standard-color-name.css
    - variable.parameter.url.css
    - constant.language.color.rgb-value.css
    - source.css keyword.other.unit
    - support.constant.property-value.css
    - support.constant.color.w3c-standard-color-name.css
    - constant.numeric.css keyword.other.unit
    - meta.attribute-selector.css string.quoted.double.css 
    - meta.attribute-selector.css string.quoted.double.css punctuation.definition.string.begin.css
    - meta.attribute-selector.css string.quoted.double.css punctuation.definition.string.end.css
    settings:
      foreground: *XML_STRING
      fontStyle: ''

  - name: Css Function
    scope:
    - meta.function.color.css support.function.misc.css
    - support.constant.font-name.css
    - source.css support.function
    settings:
      foreground: *XML_STRING
      fontStyle: italic

  - name: Css Selectors
    scope:
    - entity.other.attribute-name.id.css
    - entity.other.attribute-name.pseudo-element.css
    - entity.name.tag.css
    - entity.name.tag.custom.css
    - punctuation.definition.constant.css
    - support.constant.language-range.css
    - entity.other.attribute-name.class.css
    - entity.other.attribute-name.pseudo-class.css
    - support.type.property-name.css
    settings:
      foreground: *XML_TAG
      fontStyle: bold

  - name: Css Unicode
    scope:
    - constant.other.unicode-range.css
    - punctuation.separator.dash.unicode-range.css
    settings:
      foreground: *SASS_VAR
  
  - name: Css Import
    scope:
    - meta.at-rule.import.css string.quoted.double.css
    settings:
      foreground: *STRING
      fontStyle: ''

# =============================================================================
# SASS / SCSS
# =============================================================================
  - name: SASS/SCSS Variable
    scope:
    - variable.scss
    - source.sass variable
    - meta.property-list.css.scss.prop meta.property-value.css.scss support.constant.property-value.css.scss
    - meta.property-list.css.scss.prop constant.character.module constant.character.module.name
    - meta.property-list.css.sass.prop meta.property-value.css.sass support.constant.property-value.css.sass
    - meta.property-list.css.sass.prop constant.character.module constant.character.module.name
    settings:
      foreground: *SASS_VAR

  - name: SASS/SCSS Modules
    scope:
    - meta.property-list.css.scss.prop meta.property-value.css.scss support.constant.property-value.css.scss
    - meta.property-list.css.scss.prop constant.character.module constant.character.module.name
    - meta.property-list.css.scss.prop constant.character.module constant.numeric.module.dot
    - meta.property-list.css.sass.prop meta.property-value.css.sass support.constant.property-value.css.sass
    - meta.property-list.css.sass.prop constant.character.module constant.character.module.name
    - meta.property-list.css.sass.prop constant.character.module constant.numeric.module.dot
    settings:
      foreground: *SASS_VAR
      fontStyle: underline

  - name: SASS/SCSS Keyword
    scope:
    - constant.other.scss
    - support.type.property-name.css.sass
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: SASS property function 
    scope:
    - source.sass meta.property-list.css.sass.prop entity.name.function
    - source.css.scss support.function.misc.scss
    - source.css.scss meta.at-rule.include.scss entity.name.function.scss
    settings:
      foreground: *XML_TAG
      fontStyle: italic

  - name: SASS Interpolation
    scope:
    - support.function.interpolation.sass
    settings:
      foreground: *STRING_INTERPOLATION

  - name: SASS Hex Color
    scope:
      - source.sass constant.language.color.rgb-value.css
    settings:
      foreground: *MEMBER_VAR

  - name: SASS Attribute
    scope:
    - support.type.property-name.css.sass.prop.name
    - entity.other.attribute-name.pseudo-class.css.sass
    - entity.other.attribute-name.attribute.scss
    settings:
      foreground: *XML_ATTR
      fontStyle: ''

  - name: SASS Symbol
    scope:
      - support.constant.mathematical-symbols.scss
      - keyword.operator.sass
      - keyword.operator.scss
    settings:
      fontStyle: ''
      foreground: *DEFAULT

  - name: SASS Default
    scope:
    - comment.punctuation.comma.sass
    - comment.punctuation.comma.scss
    - source.sass keyword.control.unit
    - source.scss keyword.control.unit
    - support.constant.property-value.css.sass
    settings:
      fontStyle: ''
      foreground: *STRING

  - name: SASS Selector
    scope:
    - entity.name.tag.custom.scss
    settings:
      foreground: *XML_TAG 
      fontStyle: bold

  - name: SASS Attribute Selector
    scope:
    - meta.attribute-selector.scss
    - string.quoted.double.attribute-value.scss punctuation.definition.string.begin.scss
    - string.quoted.double.attribute-value.scss punctuation.definition.string.end.scss
    - string.quoted.single.attribute-value.scss punctuation.definition.string.begin.scss
    - string.quoted.single.attribute-value.scss punctuation.definition.string.end.scss
    - string.quoted.double.css.sass
    - string.quoted.single.css.sass
    - support.constant.property-value.css.sass
    - keyword.control.unit.css.sass
    settings:
      foreground: *XML_STRING 
      fontStyle: ''

  - name: SASS/SCSSS Mixin Function
    scope:
    - support.function.name.sass entity.name.function
    - support.function.name.sass.library
    - meta.property-list.css.sass.prop entity.name.function
    - source.css.scss meta.at-rule.mixin.scss entity.name.function.scss
    settings:
      foreground: *XML_TAG
      fontStyle: italic

  - name: SASS Function In Property
    scope:
    - meta.property-list.css.sass.prop entity.name.function
    settings:
      foreground: *XML_TAG
      fontStyle: italic
# =============================================================================
# Java
# =============================================================================
  - name: Java Keyword
    scope:
    - constant.language.java
    - variable.language.this.java
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Java Puncutation / Default
    scope:
    - punctuation.section.block.begin.bracket.curly.java
    - punctuation.section.block.end.bracket.curly.java
    - storage.type.generic.java
    settings:
      foreground: *DEFAULT

  - name: Java Function
    scope:
    - meta.method-call.java meta.method
    settings:
      foreground: *FUNCTION

  - name: Java Constant Type
    scope:
    - source.java storage.type
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: JavaDoc
    scope:
    - comment.block.javadoc.java
    - comment.block.javadoc.java punctuation.definition.comment
    settings:
      foreground: *DOC

  - name: JavaDoc Tag
    scope:
    - keyword.other.documentation.javadoc.java
    settings:
      foreground: *DOC_TAG
      fontStyle: underline

  - name: Java Enum Class
    scope:
    - entity.name.type.enum.java
    settings:
      foreground: *CLASS
      fontStyle: ''

  - name: Java Enum Constant
    scope:
    - constant.other.enum.java
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: Java Class
    scope:
    - storage.type.java
    settings:
      foreground: *CLASS
      fontStyle: ''

  - name: Java Class Fields
    scope:
    - meta.class.body.java meta.definition.variable variable.other.definition
    settings:
      foreground: *MEMBER_VAR


  - name: Java Variable
    scope:
    - meta.method.body.java meta.definition.variable variable.other.definition
    settings:
      foreground: *LOCAL_VAR
      fontStyle: ''

  - name: Java Generic
    scope:
    - storage.type.generic.java
    - meta.definition.variable.java
    settings:
      foreground: *TYPE_PARAM
      fontStyle: ''

# =============================================================================
# Kotlin
# =============================================================================
  - name: Kotlin Keyword
    scope:
    - constant.language.kotlin
    - variable.language.kotlin
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Kotlin Doc
    scope:
    - comment.block.kotlin
    - comment.block.kotlin punctuation.definition.comment.kotlin
    settings:
      foreground: *DOC

# =============================================================================
# Scala
# =============================================================================
  - name: Scala Keyword
    scope:
    - constant.language.scala
    settings:
      foreground: *KEYWORD
      fontStyle: bold
# =============================================================================
# Typesciprt / Javascript
# =============================================================================
  - name: Typescript / Javascript Keyword
    scope:
    - variable.language.this.ts
    - variable.language.this.js
    - variable.language.this.tsx
    - variable.language.this.jsx
    - constant.language.null.ts
    - constant.language.null.js
    - constant.language.null.tsx
    - constant.language.null.jsx
    - constant.language.undefined.ts
    - constant.language.undefined.js
    - constant.language.undefined.tsx
    - constant.language.undefined.jsx
    - source.ts keyword.operator.expression
    - source.js keyword.operator.expression
    - source.tsx keyword.operator.expression
    - source.jsx keyword.operator.expression
    - support.type.builtin.ts
    - support.type.builtin.js
    - support.type.builtin.tsx
    - support.type.builtin.jsx
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Typescript / Javascript Variable
    scope:
    - variable.other.constant.js  # Fix incorrect highlighting of pseudo-constants in js, jsx
    - variable.other.constant.ts  # Fixes incorrect highlighting of pseudo-constants in ts
    - variable.other.constant.tsx # Fixes incorrect highlighting of pseudo-constants in tsx
    - variable.other.constant.jsx # Fixes incorrect highlighting of pseudo-constants in tsx
    settings:
      foreground: *LOCAL_VAR

  - name: Typescript / Javascript Variable
    scope:
    - variable.other.constant.js  # Fix incorrect highlighting of pseudo-constants in js, jsx
    - variable.other.constant.ts  # Fixes incorrect highlighting of pseudo-constants in ts
    - variable.other.constant.tsx # Fixes incorrect highlighting of pseudo-constants in tsx
    - variable.other.constant.jsx # Fixes incorrect highlighting of pseudo-constants in tsx

  - name: Typescript / Javascript Default
    scope:
    - source.ts keyword.operator
    - source.tsx keyword.operator
    - source.js keyword.operator
    - source.jsx keyword.operator
    - support.type.object.module.js
    - support.type.object.module.ts
    - source.ts meta.brace
    - source.tsx meta.brace
    - source.js meta.brace
    - source.jsx meta.brace
    - variable.other.readwrite.js
    - variable.other.readwrite.ts
    - variable.other.readwrite.tsx
    - variable.other.readwrite.jsx
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: Typescript / Javascript Destructuring Value
    scope:
    - meta.object-binding-pattern-variable.js meta.definition.variable.js variable.other.constant.js
    - meta.object-binding-pattern-variable.ts meta.definition.variable.ts variable.other.constant.ts
    settings:
      foreground: *LOCAL_VAR

  - name: Typescript / Javascript Destructuring Key
    scope:
    - meta.object-binding-pattern-variable.js variable.object.property.js
    - meta.object-binding-pattern-variable.ts variable.object.property.ts
    settings:
      foreground: *MEMBER_VAR

  - name: Typescript / Javascript Predefined
    scope:
    - support.constant.json.ts
    - support.constant.json.js
    - support.constant.json.tsx
    - support.constant.json.jsx
    - variable.other.constant.property.ts
    - variable.other.constant.property.js
    - variable.other.constant.property.tsx
    - variable.other.constant.property.jsx
    - support.constant.math.ts
    - support.constant.math.js
    - support.constant.math.tsx
    - support.constant.math.jsx
    settings:
      foreground: *PREDEFINED

  - name: Typescript / Javascript Decorator
    scope:
    - meta.decorator.ts # typescript
    - source.ts meta.decorator.ts variable.other.readwrite.ts
    - source.js meta.decorator entity.name.function
    settings:
      foreground: *DECORATOR

# =============================================================================
# TSX / JSX
# =============================================================================
  - name: JSX Component
    scope:
    - meta.tag.tsx support.class.component
    - meta.tag.jsx support.class.component
    - meta.tag.js support.class.component
    - meta.tag.ts support.class.component
    - meta.tag.without-attributes.tsx support.class.component
    - meta.tag.without-attributes.jsx support.class.component
    - meta.tag.without-attributes.js support.class.component
    - meta.tag.without-attributes.ts support.class.component
    - meta.tag.tsx entity.name.tag
    - meta.tag.jsx entity.name.tag
    - meta.tag.js entity.name.tag
    - meta.tag.ts entity.name.tag
    - meta.tag.without-attributes.tsx entity.name.tag
    - meta.tag.without-attributes.jsx entity.name.tag
    - meta.tag.without-attributes.js entity.name.tag
    - meta.tag.without-attributes.ts entity.name.tag
    - meta.tag.tsx punctuation.definition.tag.begin
    - meta.tag.jsx punctuation.definition.tag.begin
    - meta.tag.ts punctuation.definition.tag.begin
    - meta.tag.js punctuation.definition.tag.begin
    - meta.tag.tsx punctuation.definition.tag.end
    - meta.tag.jsx punctuation.definition.tag.end
    - meta.tag.ts punctuation.definition.tag.end
    - meta.tag.js punctuation.definition.tag.end
    - meta.tag.without-attributes.tsx punctuation.definition.tag.begin
    - meta.tag.without-attributes.jsx punctuation.definition.tag.begin
    - meta.tag.without-attributes.ts punctuation.definition.tag.begin
    - meta.tag.without-attributes.js punctuation.definition.tag.begin
    - meta.tag.without-attributes.tsx punctuation.definition.tag.end
    - meta.tag.without-attributes.jsx punctuation.definition.tag.end
    - meta.tag.without-attributes.ts punctuation.definition.tag.end
    - meta.tag.without-attributes.js punctuation.definition.tag.end
    settings:
      foreground: *XML_TAG
      fontStyle: bold

  - name: JSX Component Punctuation
    scope:
    - meta.tag.tsx punctuation.definition.tag.begin
    - meta.tag.jsx punctuation.definition.tag.begin
    - meta.tag.ts punctuation.definition.tag.begin
    - meta.tag.js punctuation.definition.tag.begin
    - meta.tag.tsx punctuation.definition.tag.end
    - meta.tag.jsx punctuation.definition.tag.end
    - meta.tag.ts punctuation.definition.tag.end
    - meta.tag.js punctuation.definition.tag.end
    - meta.tag.without-attributes.tsx punctuation.definition.tag.begin
    - meta.tag.without-attributes.jsx punctuation.definition.tag.begin
    - meta.tag.without-attributes.ts punctuation.definition.tag.begin
    - meta.tag.without-attributes.js punctuation.definition.tag.begin
    - meta.tag.without-attributes.tsx punctuation.definition.tag.end
    - meta.tag.without-attributes.jsx punctuation.definition.tag.end
    - meta.tag.without-attributes.ts punctuation.definition.tag.end
    - meta.tag.without-attributes.js punctuation.definition.tag.end
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: JSX Attribute
    scope:
    - meta.tag.tsx entity.other.attribute-name
    - meta.tag.jsx entity.other.attribute-name
    - meta.tag.js entity.other.attribute-name
    - meta.tag.ts entity.other.attribute-name
    settings:
      foreground: *XML_ATTR

  - name: JSX Attribute Punctuation
    scope:
    - meta.tag.tsx meta.tag.attributes punctuation.section.embedded.begin
    - meta.tag.tsx meta.tag.attributes punctuation.section.embedded.end
    - meta.tag.jsx meta.tag.attributes punctuation.section.embedded.begin
    - meta.tag.jsx meta.tag.attributes punctuation.section.embedded.end
    - meta.tag.ts meta.tag.attributes punctuation.section.embedded.begin
    - meta.tag.ts meta.tag.attributes punctuation.section.embedded.end
    - meta.tag.js meta.tag.attributes punctuation.section.embedded.begin
    - meta.tag.js meta.tag.attributes punctuation.section.embedded.end
    settings:
      foreground: *DEFAULT

  - name: JSX String
    scope:
    - meta.tag.tsx string.quoted.double
    - meta.tag.jsx string.quoted.double
    - meta.tag.js string.quoted.double
    - meta.tag.ts string.quoted.double
    - meta.tag.tsx string.quoted.single
    - meta.tag.jsx string.quoted.single
    - meta.tag.ts string.quoted.single
    - meta.tag.js string.quoted.single
    - meta.tag.tsx punctuation.definition.string.begin
    - meta.tag.jsx punctuation.definition.string.begin
    - meta.tag.ts punctuation.definition.string.begin
    - meta.tag.js punctuation.definition.string.begin
    - meta.tag.tsx punctuation.definition.string.end
    - meta.tag.jsx punctuation.definition.string.end
    - meta.tag.ts punctuation.definition.string.end
    - meta.tag.js punctuation.definition.string.end
    settings:
      foreground: *XML_STRING

  - name: JSX String Expression
    scope:
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.single
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.begin
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.end
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.single
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.begin
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.end
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.single
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.begin
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.end
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.single
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.begin
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.single punctuation.definition.string.end
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.double
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.begin
    - meta.tag.tsx meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.end
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.double
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.begin
    - meta.tag.jsx meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.end
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.double
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.begin
    - meta.tag.ts meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.end
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.double
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.begin
    - meta.tag.js meta.tag.attributes meta.embedded.expression string.quoted.double punctuation.definition.string.end
    settings:
      foreground: *STRING

# =============================================================================
# C++
# =============================================================================
  - name: C++ Control Directives
    scope:
    - keyword.control.directive.include.cpp
    - keyword.control.directive.define.cpp
    - keyword.control.directive.conditional.ifdef.cpp
    - keyword.control.directive.endif.cpp
    - entity.name.label.cpp
    - punctuation.definition.directive.cpp
    settings:
      foreground: *DECORATOR
      fontStyle: ''

  - name: C++ Global Variable
    scope:
    - variable.other.global.cpp
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: C++ Preprocess
    scope:
    - entity.name.function.preprocessor.cpp
    settings:
      foreground: *MACRO
      fontStyle: ''

  - name: C++ Keywords
    scope:
    - meta.body.namespace.cpp
    - variable.language.this.cpp
    settings:
      foreground: *KEYWORD

  - name: C++ Namespace
    scope:
    - entity.name.namespace.cpp
    settings:
      foreground: *CLASS
      fontStyle: bold

  - name: C++ Struct / Enum
    scope:
    - entity.name.type.class.templated.cpp
    - entity.name.type.struct.cpp
    - entity.name.type.enum.cpp
    settings:
      foreground: *CLASS
      fontStyle: ''

  - name: C++ Member variable
    scope:
    - meta.body.struct.cpp
    - meta.preprocessor.macro.cpp
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''

  - name: C++ Constant
    scope:
    - variable.other.enummember.cpp
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: C++ Typedef
    scope:
    - meta.tail.struct.cpp
    - meta.body.namespace.cpp
    - entity.name.type.template.cpp
    settings:
      foreground: *TYPE_PARAM
      fontStyle: ''

  - name: C++ Interpolation
    scope:
    - string.quoted.double.raw.cpp punctuation.definition.string.begin.cpp
    - string.quoted.double.raw.cpp punctuation.definition.string.end.cpp
    settings:
      foreground: *STRING_INTERPOLATION
      fontStyle: ''

  - name: C++ Operators
    scope:
    - keyword.operator.cpp
    settings:
      foreground: *DEFAULT

  - name: C++ Local Variable
    scope:
    - meta.function.definition.cpp meta.body.function.definition.cpp
    settings:
      foreground: *LOCAL_VAR
# =============================================================================
# Python
# =============================================================================
  - name: Python Decorator
    scope:
    - entity.name.function.decorator.python
    - punctuation.definition.decorator.python
    settings:
      foreground: *DECORATOR
      fontStyle: ''

  - name: Python Function Call
    scope:
      - meta.function-call.python support.type.python
    settings:
      foreground: *FUNCTION

  - name: Python String Interpolation
    scope:
    - constant.character.format.placeholder.other.python
    - storage.type.format.python
    - storage.type.string.python  # String formatting
    settings:
      foreground: *STRING_INTERPOLATION
      fontStyle: ''

  - name: Python Doc String
    scope:
      - string.quoted.docstring.multi.python punctuation.definition.string.begin
      - string.quoted.docstring.multi.python punctuation.definition.string.end
      - string.quoted.docstring.multi.python constant.character.escape
      - string.quoted.docstring.multi.python
    settings:
      foreground: *STRING
      fontStyle: ''

  - name: Python Property
    scope:
    - meta.item-access.python
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: Python Keyword
    scope:
    - constant.language.python
    - variable.language.special.self.python
    - variable.parameter.function.language.special.self.python
    - keyword.operator.logical.python
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Python Arguments
    scope:
      - meta.function-call.arguments.python
    settings:
      foreground: *DEFAULT

  - name: Python Exception
    scope:
      - support.type.exception.python
    settings:
      foreground: *CLASS

  - name: Python Magic Function
    scope:
      - support.function.magic.python
    settings:
      foreground: *FUNCTION
      fontStyle: bold italic

# =============================================================================
# Swift
# =============================================================================
  - name: Swift Class
    scope:
    - entity.name.type.struct.swift
    - entity.name.type.enum.swift
    settings:
      foreground: *CLASS
      fontStyle: ''

  - name: Swift protocol
    scope:
    - entity.name.type.protocol.swift
    - meta.inheritance-clause.swift
    settings:
      foreground: *INTERFACE
      fontStyle: ''

  - name: Swift Type parameter
    scope:
    - entity.name.type.typealias.swift
    - variable.language.generic-parameter.swift
    - meta.generic-parameter-clause.swift
    settings:
      foreground: *TYPE_PARAM
      fontStyle: ''

  - name: Swift Keyword
    scope:
    - punctuation.definition.attribute.swift
    - storage.modifier.attribute.swift
    - constant.language.nil.swift
    - variable.language.swift
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Swift Preprocess
    scope:
    - punctuation.definition.preprocessor.swift
    - keyword.control.preprocessor.conditional.swift
    settings:
      foreground: *DECORATOR
      fontStyle: ''

  - name: Swift Function Parameters
    scope:
    - meta.parameter-clause.swift variable.parameter.function.swift
    - meta.parameter-clause.swift entity.name.function.swift
    settings:
      foreground: *FUNCTION_PARAM
      fontStyle: ''

  - name: Swift Default # Because no sematic highlight
    scope:
    - support.function.any-method.swift
    - meta.parameter-clause.swift entity.name.function.swift
    - meta.function-call.swift
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: Swift Property 
    scope:
    - variable.other.swift
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''
# =============================================================================
# Go
# =============================================================================
  - name: Go Keywords
    scope:
      - constant.language.go
    settings:
      foreground: *KEYWORD
      fontStyle: bold
  - name: Go System Type
    scope:
      - source.go storage.type
    settings:
      foreground: *KEYWORD
      fontStyle: bold
# =============================================================================
# GraphQL (GraphQL for VSCode)
# =============================================================================
  - name: GraphQL Doc
    scope:
      - string.block.description.graphql.DOCSTRING
      - string.block.description.graphql.DOCSTRING punctuation.definition.string.graphql
    settings:
      foreground: *DOC

  - name: GraphQL Comment Like
    scope:
      - graphql.description.SINGLELINE string.description.graphql
      - graphql.description.SINGLELINE punctuation.definition.string.graphql
    settings:
      foreground: *COMMENT

# =============================================================================
# GraphQL (Prisma)
# =============================================================================
  - name: GraphQL Function / Fragment
    scope:
      - entity.name.function.graphql
    settings:
      foreground: *DEFAULT

  - name: GraphQL Fragment
    scope:
      - entity.name.fragment.graphql
    settings:
      foreground: *FUNCTION

  - name: GraphQL Directive
    scope:
      - entity.name.function.directive.graphql
    settings:
      foreground: *DECORATOR

  - name: GraphQL Alias
    scope:
      - string.unquoted.alias.graphql
    settings:
      foreground: *MEMBER_VAR

  - name: GraphQL Function Parameter
    scope:
      - variable.parameter.graphql
    settings:
      foreground: *FUNCTION_PARAM

  - name: GraphQL Interface
    scope:
      - meta.type.interface.graphql support.type.graphql
    settings:
      foreground: *INTERFACE

  - name: GraphQL Arguments
    scope:
      - variable.arguments.graphql
      - variable.graphql
    settings:
      foreground: *MEMBER_VAR

  - name: GraphQL Built-in Type
    scope:
      - support.type.builtin.graphql
      - support.type.enum.graphql
    settings:
      foreground: *CLASS
      
  - name: GraphQL Keyword
    scope:
      - constant.language.boolean.graphql
    settings:
      foreground: *KEYWORD
      fontStyle: bold
# =============================================================================
# PHP
# =============================================================================

  - name: PHP Keywords
    scope:
    - punctuation.section.embedded.begin.php
    - punctuation.section.embedded.end.php
    - punctuation.section.embedded.end.php source.php
    - variable.language.this.php
    - constant.language.php
    - storage.type.php
    - keyword.operator.heredoc.php
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: PHP Class Fields
    scope:
      - meta.class.body.php variable.other.php
      - meta.class.body.php variable.other.php punctuation.definition.variable.php
    settings:
      foreground: *MEMBER_VAR

  - name: PHP Magic Function
    scope:
      - support.function.magic.php
    settings:
      foreground: *FUNCTION
      fontStyle: bold italic

  - name: PHP Function parameter
    scope:
      - meta.function.parameters.php variable.other.php
    settings:
      foreground: *FUNCTION_PARAM

  - name: PHP Typehints
    scope:
      - meta.function.parameter.typehinted.php
      - meta.function.parameter.typehinted.php storage.type.php
    settings:
      foreground: *TYPE_PARAM

  - name: PHP Variable
    scope:
      - variable.other.php
      - variable.other.class.php
      - variable punctuation.definition.variable.php # Fixes php $ sign and variables
    settings:
      foreground: *LOCAL_VAR

  - name: PHP Global
    scope:
      - variable.other.global.php
      - variable.other.global.php punctuation.definition.variable.php
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: PHP Class
    scope:
      - support.class.php
    settings:
      foreground: *CLASS

# =============================================================================
# Protobuf
# =============================================================================
  - name: Protobuf Keyword
    scope:
      - constant.language.proto
      - keyword.operator.proto
    settings:
      foreground: *KEYWORD
      fontStyle: bold
# =============================================================================
# YAML
# =============================================================================
  - name: YAML Keyword
    scope:
    - source.yaml constant
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: YAML Separators
    scope:
    - punctuation.definition.block.scalar.folded.yaml
    - punctuation.definition.block.scalar.literal.yaml
    - punctuation.definition.block.sequence.item.yaml
    - punctuation.separator.key-value.mapping.yaml
    - support.other.chomping-indicator.yaml
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: YAML Keys
    scope:
    - entity.name.tag.yaml
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''

  - name: YAML Anchor
    scope:
    - punctuation.definition.anchor.yaml
    - entity.name.type.anchor.yaml
    settings:
      foreground: *XML_TAG

  - name: YAML Aliases
    scope:
    - variable.other.alias.yaml
    - punctuation.definition.alias.yaml
    settings:
      fontStyle: italic
      foreground: *XML_TAG

  - name: Config Default
    scope:
    - source.yaml string.unquoted
    settings:
      foreground: *DEFAULT
# =============================================================================
# TOML
# =============================================================================
  - name: TOML Separators
    scope:
    - meta.group.double.toml
    - meta.group.toml
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: TOML Keys
    scope:
    - entity.name.function.target.makefile
    - entity.name.section.toml
    - variable.other.key.toml
    - entity.name.tag.toml
    - keyword.key.toml
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''

  - name: TOML Table / Array
    scope:
    - entity.other.attribute-name.table.toml
    - entity.other.attribute-name.table.array.toml
    settings:
      foreground: *DEFAULT

  - name: TOML Keyword
    scope:
    - constant.other.boolean.toml
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: TOML Keys Keyword
    scope:
    - meta.tag.table.toml entity.other.attribute-name.table.toml
    settings:
      foreground: *RELAX_MD_KEYWORD
      
# =============================================================================
# Java Properties / .ini
# =============================================================================
  - name: ini Default
    scope:
    - source.ini
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: ini Properties Keys
    scope:
    - keyword.other.definition.ini
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''
# =============================================================================
# HOCON (.conf)
# =============================================================================
  - name: HOCON Default
    scope:
    - source.hocon
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: HOCON Constant
    scope:
    - constant.language.hocon
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: HOCON Storage Type
    scope:
    - storage.type.source.hocon
    settings:
      foreground: *STRING_INTERPOLATION
# =============================================================================
# Shell
# =============================================================================
  - name: Shell Operators
    scope:
    - keyword.operator
    settings:
      foreground: *DEFAULT
      fontStyle: ''

  - name: Shell String Interpolation
    scope:
    - string.quoted.double.shell variable.other.bracket.shell punctuation.definition.variable.shell
    - string.quoted.double.shell string.interpolated.dollar.shell punctuation.definition.string.begin.shell
    - string.quoted.double.shell string.interpolated.dollar.shell punctuation.definition.string.end.shell
    - meta.scope.subshell.shell string.interpolated.dollar.shell punctuation.definition.string.begin.shell
    - meta.scope.subshell.shell string.interpolated.dollar.shell punctuation.definition.string.end.shell
    settings:
      foreground: *STRING_INTERPOLATION

  - name: Shell Variable
    scope:
    - string.quoted.double.shell variable.other
    settings:
      foreground: *DEFAULT
      fontStyle: bold

# =============================================================================
# Perl
# =============================================================================
  - name: Perl Constant Key
    scope:
      - constant.other.key.perl  # Perl edge case
    settings:
      foreground: *LOCAL_VAR

  - name: Perl Bareword
    scope:
    - constant.other.bareword.perl
    settings:
      foreground: *FUNCTION_PARAM

# =============================================================================
# SQL
# =============================================================================
  - name: SQL Database Name
    scope:
    - constant.other.database-name.sql
    settings:
      foreground: *ABSTRACT_CLASS
      
  - name: SQL Table Name
    scope:
    - constant.other.table-name.sql
    settings:
      foreground: *CLASS
# =============================================================================
# Groovy / Gradle
# =============================================================================
  - name: Groovy Primitive
    scope:
    - constant.language.groovy
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Groovy Key
    scope:
    - constant.other.key.groovy
    settings:
      foreground: *MEMBER_VAR

  - name: Groovy Interpolation
    scope:
    - string.quoted.double.groovy source.groovy.embedded.source
    settings:
      foreground: *STRING_INTERPOLATION
# =============================================================================
# Rust
# =============================================================================
  - name: Rust Docuemntation
    scope:
    - comment.line.documentation.rust
    settings:
      foreground: *DOC

  - name: Rust Keyword
    scope:
    - variable.language.rust
    - storage.modifier.mut.rust
    - entity.name.type.option.rust
    - variable.language.self.rust
    - entity.name.type.numeric.rust
    - constant.language.bool.rust
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Rust Callable Core
    scope:
    - support.function.core.rust
    settings:
      foreground: *FUNCTION
      fontStyle: italic

  - name: Rust Attribute
    scope:
    - meta.attribute.rust
    - punctuation.definition.attribute.rust
    settings:
      foreground: *DECORATOR

  - name: Rust String
    scope:
    - punctuation.definition.string.rust
    settings:
      foreground: *STRING

  - name: Rust Type Params
    scope:
    - meta.type_params.rust
    - meta.function.definition.rust entity.name.type.rust
    settings:
      foreground: *TYPE_PARAM

  - name: Rust Trait
    scope:
    - support.type.core.rust
    settings:
      foreground: *INTERFACE

  - name: Rust Primitive
    scope:
    - storage.type.core.rust
    settings:
      foreground: *CLASS
      fontStyle: italic

  - name: Rust Class / Enum / Struct
    scope:
    - entity.name.type.rust
    - entity.name.type.struct.rust
    - storage.class.std.rust
    settings:
      foreground: *CLASS

  - name: Rust Constant
    scope:
    - support.constant.core.rust
    settings:
      fontStyle: bold
      foreground: *PREDEFINED

  - name: Rust Lifetime
    scope:
    - entity.name.type.lifetime.rust
    - punctuation.definition.lifetime.rust
    - storage.modifier.lifetime.rust
    settings:
      foreground: *TYPE_PARAM
      fontStyle: bold italic

  - name: Rust Variable / Parameter
    scope:
    - variable.other.rust
    settings:
      foreground: *FUNCTION_PARAM

  - name: Rust Marco Function Call
    scope:
    - entity.name.function.macro.rust
    settings:
      foreground: *FUNCTION
      fontStyle: italic
# =============================================================================
# Angular Template
# =============================================================================
  - name: Angular Binding
    scope:
    - entity.other.ng-binding-name
    settings:
      foreground: *FUNCTION_PARAM
  - name: Angular Binding Punctuation
    scope:
    - meta.ng-binding punctuation.definition.string.begin.html
    - meta.ng-binding punctuation.definition.string.end.html
    settings:
      foreground: *DEFAULT
# =============================================================================
# Vue Template
# =============================================================================
  - name: Vue Binding
    scope:
    - meta.directive.vue
    - meta.directive.vue entity.other.attribute-name.html
    settings:
      foreground: *FUNCTION_PARAM
  - name: Vue Binding Punctuation
    scope:
    - meta.directive.vue
    - meta.directive.vue source.directive.vue punctuation.definition.string.begin.html
    - meta.directive.vue source.directive.vue punctuation.definition.string.end.html
    settings:
      foreground: *DEFAULT
# =============================================================================
# Dart
# =============================================================================
  - name: Dart Keyword
    scope:
    - constant.language.dart
    settings:
      foreground: *KEYWORD
      fontStyle: bold
  - name: Dart Class
    scope:
    - support.class.dart
    settings:
      foreground: *CLASS
      fontStyle: ''
  - name: Dart Declaration
    scope:
    - meta.declaration.dart
    settings:
      foreground: *DEFAULT
      fontStyle: ''
      
# =============================================================================
# Dart
# =============================================================================
  - name: Ruby symbol Hashkey
    scope:
    - constant.language.symbol.hashkey.ruby
    settings:
      foreground: *MEMBER_VAR
      fontStyle: ''

  - name: Ruby variable
    scope:
    - variable.other.readwrite.instance.ruby
    settings:
      foreground: *FUNCTION_PARAM
      fontStyle: ''

  - name: Ruby Global variable
    scope:
    - variable.other.readwrite.global.ruby
    - variable.other.readwrite.global.ruby punctuation.definition.variable.ruby
    - variable.other.readwrite.global.pre-defined.ruby
    - variable.other.readwrite.global.pre-defined.ruby punctuation.definition.variable.ruby
    settings:
      foreground: *PREDEFINED
      fontStyle: italic

  - name: Ruby Constant
    scope:
    - variable.other.constant.ruby
    settings:
      foreground: *PREDEFINED
      fontStyle: ''

  - name: Ruby Special Method
    scope:
    - keyword.other.special-method.ruby
    settings:
      foreground: *FUNCTION
      fontStyle: ''
  
  - name: Ruby Heredoc
    scope:
    - string.unquoted.heredoc.ruby punctuation.definition.string.begin.ruby
    - string.unquoted.heredoc.ruby punctuation.definition.string.end.ruby
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Ruby Class
    scope:
    - variable.other.readwrite.class.ruby
    - variable.other.readwrite.class.ruby punctuation.definition.variable.ruby
    settings:
      foreground: *CLASS

  - name: Ruby Interpolate String
    scope:
    - string.quoted.other.interpolated.ruby punctuation.section.array.begin.ruby
    - string.quoted.other.interpolated.ruby punctuation.section.array.end.ruby
    settings:
      foreground: *STRING_INTERPOLATION
# =============================================================================
# Erlang
# =============================================================================
  - name: Elixir Atom
    scope:
    - variable.other.erlang
    - source.erlang constant.other.symbol
    settings:
      foreground: *MEMBER_VAR

# =============================================================================
# Elixir
# =============================================================================
  - name: Elixir Keywords
    scope:
    - constant.language.elixir
    settings:
      foreground: *KEYWORD
      fontStyle: bold

  - name: Elixir Atom
    scope:
    - constant.other.symbol.elixir
    settings:
      foreground: *MEMBER_VAR

  - name: Elixir Language Variable
    scope:
    - variable.language.elixir
    settings:
      foreground: *PREDEFINED

  - name: Elixir Module
    scope:
    - variable.other.readwrite.module.elixir
    - variable.other.readwrite.module.elixir punctuation.definition.variable.elixir
    settings:
      foreground: *DECORATOR

  - name: Elixir Variable
    scope:
    - source.elixir variable
    settings:
      foreground: *FUNCTION_PARAM

  - name: Elixir Embedded Source
    scope:
    - source.elixir.embedded.source
    - punctuation.section.embedded.elixir
    settings:
      foreground: *STRING_INTERPOLATION
